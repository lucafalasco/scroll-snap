name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master 

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Enable Corepack
      run: corepack enable

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Ensure correct Yarn version
      run: corepack prepare yarn@4.4.1 --activate

    - name: Get Yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Cache Yarn dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          yarn-cache-${{ runner.os }}-

    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: yarn playwright install --with-deps
      
    - name: Run unit tests
      id: unit-test
      run: yarn test:coverage
      
    - name: Run coverage check
      id: coverage-check
      run: yarn test:coverage --coverageThreshold={}  
      
    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Run e2e tests
      id: e2e-test
      run: yarn test:e2e
    
    - name: Report Status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const unitStatus = '${{ steps.unit-test.outcome }}'
          const e2eStatus = '${{ steps.e2e-test.outcome }}'
          const status = unitStatus === 'success' && e2eStatus === 'success' ? 'success' : 'failure'
          core.setOutput('status', status)